services:

  gipod-data-provider:
    image: ghcr.io/informatievlaanderen/ldi-orchestrator:20230927142432
    container_name: demonstrator_gipod-data-provider
    ports:
      - 8082:8080
    volumes:
      - ./gipod.config.yml:/ldio/application.yml:ro
      - ./rml:/ldio/rml:ro
      - ./sparql:/ldio/sparql:ro
    depends_on:
      - demonstrator
      - rdf4j-server
    networks:
      - demonstrator

  demonstrator:
    container_name: demonstrator
    image: vsds-demonstrator
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/test
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=test
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDLAUTO=update
      - LDES_STREAMS_0_NAME=gipod
      - LDES_STREAMS_0_MEMBERTYPE=https://data.vlaanderen.be/ns/mobiliteit#Mobiliteitshinder
      - LDES_STREAMS_0_TIMESTAMPPATH=http://www.w3.org/ns/prov#generatedAtTime
      - LDES_STREAMS_1_NAME=verkeersmeting
      - LDES_STREAMS_1_MEMBERTYPE=https://data.vlaanderen.be/ns/verkeersmetingen#Verkeersmeting
      - LDES_STREAMS_1_TIMESTAMPPATH=http://www.w3.org/ns/prov#generatedAtTime
      - GRAPHDB_URL=http://rdf4j-server:8080/rdf4j-server/repositories/
      - GRAPHDB_REPOSITORYID=test
      - SERVER_PORT=8080
      - VITE_HOST=demonstrator
      - VITE_PORT=8080
    ports:
      - 8084:8080
    depends_on:
      - postgresql
      - rdf4j-server
    networks:
      - demonstrator

  rdf4j-server:
    image: eclipse/rdf4j-workbench:latest
    container_name: demonstrator-rdf4j-server
    environment:
      - "JAVA_OPTS=-Xms1g -Xmx4g"
    ports:
      - 8080:8080
    networks:
      - demonstrator

  postgresql:
    image: kartoza/postgis
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=test
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=test
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - RUN_AS_ROOT=true
    ports:
      - "25432:5432"
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=test pg_isready -h 127.0.0.1 -U postgres -d test"
    networks:
      - demonstrator

networks:
  demonstrator:
    driver: bridge
    name: demonstrator
